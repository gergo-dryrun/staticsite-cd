AWSTemplateFormatVersion: "2010-09-09"
Description: "Template for CI/CD related resources for static sites."

Parameters:
  SiteName:
    Type: String
    Description: Name of the application.
    MinLength: "1"
    MaxLength: "80"
    AllowedPattern: "[A-Za-z0-9-]+"
    ConstraintDescription: Malformed input parameter. SiteName must only contain upper and lower case letters, numbers, and -.
  CodeBuildImage:
    Type: String
    Default: "aws/codebuild/ruby:2.3.1"
    Description: Image used for CodeBuild project.
  GitHubRepoName:
    Type: String
    Description: The GitHub repo name
  GitHubRepoBranch:
    Type: String
    Description: The GitHub repo branch code pipelines should watch for changes on
    Default: master
  GitHubUser:
    Type: String
    Description: GitHub UserName. This username must have access to the GitHubToken.
  GitHubToken:
    NoEcho: true
    Type: String
    Description: "Secret. OAuthToken with access to Repo. Long string of characters and digits. Go to https://github.com/settings/tokens"
  CodePipelineRole:
    Type: String
    Description: Role the pipeline will use
  CodeBuildRole:
    Type: String
    Description: Role for code build
  LambdaPublishRole:
    Type: String
    Description: Role for lambda publisher
  BaseDomainName:
    Type: String
    Description: "Base domain name of your website. Example: mystaticblog.io"
  CreateStagingEnvironment:
    Type: String
    Default: 'yes'
    AllowedValues: ['yes', 'no']
    Description: "Optional: Choose yes if you are using a staging environment backed by S3 static hosted website."
  StagingSubdomain:
    Description: "Optional: Subdomain for staging environment"
    Type: String
    Default: staging
  NotificationMail:
    Description: "Optional: Email for notification when staging is awaiting approval"
    Type: String
Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Mandatory Settings
      Parameters: [SiteName, BaseDomainName]
    - Label:
        default: Github Settings
      Parameters: [GitHubRepoName, GitHubUser, GitHubRepoBranch, GitHubToken]
    - Label:
        default: Staging environment configurations
      Parameters: [CreateStagingEnvironment, StagingSubdomain, NotificationMail]
    - Label:
        default: AWS Services Settings
      Parameters: [CodeBuildImage, CodePipelineRole, CodeBuildRole, LambdaPublishRole]

Conditions:
  CreateStagingEnvironmentActivated: !Equals [!Ref 'CreateStagingEnvironment', 'yes']

Resources:

  SiteDeployer:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${SiteName}-lambda-publisher"
      Handler: lambda.lambda_handler
      Code:
        S3Bucket: dryrun.cloud-resources
        S3Key: 2017-04-23-getting-started-static-sites-cd/staticsite_deployer.zip
      Runtime: python2.7
      Timeout: 300
      Role: !Ref LambdaPublishRole

  CodeBuildProject:
    DependsOn: [S3Bucket]
    Description: Creating AWS CodeBuild project
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Building stage for ${SiteName}."
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref S3Bucket
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub "${SiteName}-build"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: app-name
          Value: !Ref SiteName
      TimeoutInMinutes: 5

  S3Bucket:
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "codepipeline-app-${AWS::AccountId}-${AWS::Region}-${SiteName}"
      VersioningConfiguration:
        Status: Enabled

  S3ArtifactBucketPolicy:
    DependsOn: [S3Bucket]
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: "*"
          Action: s3:*
          Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
          Condition:
            Bool:
              aws:SecureTransport: false

  SnsNotification:
    Condition: CreateStagingEnvironmentActivated
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "Pipeline ${SiteName} notification"
      Subscription:
      -
        Endpoint: !Ref NotificationMail
        Protocol: email
      TopicName: !Sub ${SiteName}-topic

  ProjectPipeline:
    DependsOn: [S3Bucket, CodeBuildProject]
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${SiteName}-pipeline"
      RoleArn: !Ref CodePipelineRole
      Stages:
      - Name: Source
        Actions:
        - Name: source
          InputArtifacts: []
          ActionTypeId:
            Version: "1"
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
          OutputArtifacts:
          - Name: !Sub "${SiteName}-SourceArtifact"
          Configuration:
            Repo: !Ref GitHubRepoName
            Branch: !Ref GitHubRepoBranch
            OAuthToken: !Ref GitHubToken
            Owner: !Ref GitHubUser
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: build-from-source
          InputArtifacts:
          - Name: !Sub "${SiteName}-SourceArtifact"
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: "1"
            Provider: CodeBuild
          OutputArtifacts:
          - Name: !Sub "${SiteName}-BuildArtifact"
          Configuration:
            ProjectName: !Sub "${SiteName}-build"
          RunOrder: 1
      - !If
        - CreateStagingEnvironmentActivated
        - Name: Staging
          Actions:
          - Name: Deploy-to-Staging
            InputArtifacts:
            - Name: !Sub "${SiteName}-BuildArtifact"
            ActionTypeId:
              Category: Invoke
              Owner: AWS
              Version: "1"
              Provider: Lambda
            Configuration:
              FunctionName: !Sub "${SiteName}-lambda-publisher"
              UserParameters: !Sub ${StagingSubdomain}.${BaseDomainName}
            RunOrder: 1
          - Name: Awaiting-Approval
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: "1"
              Provider: Manual
            Configuration:
              ExternalEntityLink: !Sub http://${StagingSubdomain}.${BaseDomainName}
              NotificationArn: !Ref SnsNotification
            RunOrder: 2
        - !Ref AWS::NoValue
      - Name: Production
        Actions:
        - Name: Deploy-to-Production
          InputArtifacts:
          - Name: !Sub "${SiteName}-BuildArtifact"
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: "1"
            Provider: Lambda
          Configuration:
            FunctionName: !Sub "${SiteName}-lambda-publisher"
            UserParameters: !Sub live.${BaseDomainName}
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
